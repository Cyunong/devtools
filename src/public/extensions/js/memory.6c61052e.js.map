{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/memory/components/memory.vue?ca51","webpack:///./src/views/memory/app.vue?8ede","webpack:///./src/views/memory/components/memory-compare-tables.vue?09ef","webpack:///./src/views/memory/app.vue","webpack:///./src/views/memory/components/memory.vue","webpack:///./src/views/memory/components/memory-snapshot-table.vue?e7b9","webpack:///./src/views/memory/components/memory-snapshot-table.vue","webpack:///./src/views/memory/components/memory-snapshot-table.vue?5e49","webpack:///./src/views/memory/components/memory-data.ts","webpack:///./src/views/memory/components/memory-compare-tables.vue","webpack:///./src/views/memory/components/memory-compare-tables.vue?3a70","webpack:///./src/views/memory/components/memory-compare-tables.vue?41d7","webpack:///./src/views/memory/components/memory.vue?9acd","webpack:///./src/utils/channel.ts","webpack:///./src/views/memory/memory-channel.ts","webpack:///./src/views/memory/components/memory.vue?b1b2","webpack:///./src/views/memory/app.vue?3755","webpack:///./src/views/memory/app.vue?0459","webpack:///./src/views/memory/store/index.ts","webpack:///./src/views/memory/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","ref","style","memoryTable","lastExpandedRow","justify","type","isLoadingSnapshot","loading","round","size","isRecording","startRecord","icon","stopCollectMemory","clearDatas","selectedTime","source","snapshotTable","default-sort","onTableExpandChange","onTableRowClick","border","max-height","default","memoryDetailTableData","row-key","getRowKey","highlight-current-row","id","show-header","label","prop","width","sortable","props","Array","setup","memorySnapshopTable","mounted","this","methods","row","toggleRowExpansion","detail","expandedRows","render","CORE_MEMORY_STRING","gutter","span","startOnly","onStartOnlyExpandChange","onStartOnlyRowClick","startOnlyDetailTableData","endOnly","onEndOnlyExpandChange","onEndOnlyRowClick","endOnlyDetailTableData","memoryChart","timer","clickParams","extensionName","ws","undefined","msgBuffer","requestPromiseMap","Map","eventListenerMap","url","URL","parent","location","href","searchParams","newUrl","clientId","set","wsUrl","toString","console","log","WebSocket","onopen","forEach","msg","send","onmessage","event","res","JSON","parse","requestPromise","resolve","onclose","e","Error","values","reject","readyState","OPEN","Promise","isReady","sendToParent","then","stringify","method","listener","has","cmd","postMessage","origin","removeEventListener","addEventListener","setTimeout","memoryChannel","timeShowSpit","heapDataList","components","MemorySnapshotTable","MemoryCompareTables","time","fill","coreData","memoryExpandedArray","watch","appConnect","onDeviceChange","onAppStatusChange","drawEChart","destroyed","charts","$refs","memoryChartContainer","dispose","preferDarkMode","matchMedia","matches","echarts","dataZoom","filterMode","realtime","height","start","end","title","tooltip","triggerOn","trigger","enterable","axisPointer","backgroundColor","legend","show","textStyle","fontSize","xAxis","boundaryGap","snap","lineStyle","color","formatter","params","onAxisPointerClick","handle","axisLabel","interval","yAxis","scale","series","symbol","setOption","getZr","on","seriesData","axisDimension","onValueClick","onresize","resize","addMemoryData","yValue","updateEchartsData","smooth","loadTabData","fetchHeapMeta","item","find","v","commandRes","groupHeapMates","heapMetas","goToDetail","setInterval","doSendCoreRequest","clearInterval","onReceivedMessage","rsp","sumByte","reduce","accumulator","currentValue","Number","memoryMSize","toFixed","date","Date","getHours","getMinutes","getSeconds","join","TDFMemoryGetHeapMeta","rowKey","groups","map","val","acc","concat","count","onMemoryExpandChanged","active","__scopeId","Memory","state","mutations","actions","use","store","mount"],"mappings":"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","file":"js/memory.6c61052e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"memory\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/extensions/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./memory.vue?vue&type=style&index=0&id=4c30ffe0&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./app.vue?vue&type=style&index=0&id=4fa4f3f3&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./memory-compare-tables.vue?vue&type=style&index=0&id=a8a57542&lang=css\"","<template>\n  <memory></memory>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Memory from '@@/memory/components/memory.vue';\nimport '../index.scss';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Memory,\n  },\n});\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n</style>\n","<template>\n  <div class=\"Memory\">\n    <el-container class=\"memoryPanel\">\n      <el-header class=\"memoryElHeader\">\n        <el-row\n          class=\"row-bg\"\n          justify=\"end\"\n          type=\"flex\"\n        >\n          <el-button\n            :loading=\"true\"\n            round\n            size=\"mini\"\n            type=\"danger\"\n            v-if=\"isLoadingSnapshot\"\n          >snapshot读取中...</el-button>\n          <el-button\n            :loading=\"isRecording\"\n            @click=\"startRecord\"\n            icon=\"el-icon-check\"\n            round\n            size=\"mini\"\n            type=\"danger\"\n          >采集</el-button>\n          <el-button\n            @click=\"stopCollectMemory\"\n            icon=\"el-icon-close\"\n            round\n            size=\"mini\"\n            type=\"danger\"\n          >停止</el-button>\n          <el-button\n            @click=\"clearDatas\"\n            icon=\"el-icon-delete\"\n            round\n            size=\"mini\"\n            type=\"danger\"\n          >清理</el-button>\n        </el-row>\n      </el-header>\n      <el-main class=\"memoryMain\">\n        <div\n          class=\"memoryChartContainer\"\n          ref=\"memoryChartContainer\"\n        ></div>\n        <div>\n          <h3 style=\"text-align: left\">{{selectedTime ? `${selectedTime}的内存快照：` : '请点击图表选择时刻查看内存快照'}}</h3>\n          <memory-snapshot-table\n            :source=\"snapshotTable\"\n            class=\"memorySnapshopTable\"\n            v-if=\"selectedTime\"\n          ></memory-snapshot-table>\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport * as echarts from 'echarts';\nimport MemorySnapshotTable from './memory-snapshot-table.vue';\nimport * as MemoryData from './memory-data';\nimport MemoryCompareTables from './memory-compare-tables.vue';\n// import { showToast, TipsType } from '@/utils/toast';\nimport { memoryChannel as channel } from '../memory-channel';\nimport { TdfCommand } from '@tencent/tdf-devtools-protocol/types/enum-tdf-mapping';\n\n// const coreSnapshotPrefix = 'memory_core_snapshot';\n// const jsSnapshotPrefix = 'memory_js_snapshot';\nconst timeShowSpit = ':';\n// const timeFileNameSplit = '_';\nlet memoryChart: echarts.ECharts;\nlet option: echarts.EChartsOption;\nlet timer: NodeJS.Timeout;\nlet i = 0;\nlet clickParams: MemoryData.IMemoryChartPointerClickParams;\nconst heapDataList = Array(100);\n\nexport default defineComponent({\n  components: { MemorySnapshotTable, MemoryCompareTables },\n  data() {\n    return {\n      snapshotTable: [],\n      // echarts横坐标数组数据\n      time: Array(100).fill(''),\n      // echarts纵坐标数组数据\n      coreData: Array(100),\n      selectedTime: '',\n      isRecording: false,\n      isLoadingSnapshot: false,\n      memoryExpandedArray: [MemoryData.CORE_MEMORY_STRING],\n    };\n  },\n  watch: {\n    '$store.state.device.list'(appConnect) {\n      console.log('list', appConnect);\n      this.onDeviceChange();\n    },\n    '$store.state.device.appConnect'(appConnect) {\n      console.log('appConnect', appConnect);\n      this.onAppStatusChange();\n    },\n  },\n  // 挂载\n  mounted() {\n    this.drawEChart();\n  },\n  destroyed() {\n    console.log('memory page destroyed');\n    // this.closeWebSockerConnect();\n    // this.deleteCacheFile();\n  },\n  methods: {\n    drawEChart() {\n      const charts = this.$refs.memoryChartContainer as HTMLElement;\n      if (charts !== null) {\n        if (memoryChart) memoryChart.dispose();\n        const preferDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        memoryChart = echarts.init(charts, preferDarkMode ? 'dark' : 'light');\n      }\n      option = {\n        dataZoom: [\n          {\n            filterMode: 'none',\n            realtime: false, // 拖动滚动条时是否动态的更新图表数据\n            height: 25, // 滚动条高度\n            start: 75, // 滚动条开始位置（共100等份）\n            end: 100, // 结束位置（共100等份）\n          },\n        ],\n        title: {},\n        tooltip: {\n          triggerOn: 'click',\n          trigger: 'axis',\n          enterable: true,\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#909399', // 竖标横坐标背景色\n            },\n          },\n        }, // 提示框组件\n        legend: {\n          show: true,\n          data: [MemoryData.CORE_MEMORY_STRING],\n          icon: 'circle',\n          // orient: 'vertical',\n          // right: 10,\n          textStyle: {\n            fontSize: 14,\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          axisPointer: {\n            value: '',\n            snap: true,\n            lineStyle: {\n              color: '#409EFF',\n              width: 1,\n            },\n            label: {\n              formatter: (params: MemoryData.IMemoryChartPointerClickParams) => this.onAxisPointerClick(params),\n            },\n            handle: {\n              show: true,\n              color: '#409EFF',\n              icon: 'none',\n            },\n          },\n          axisLabel: {\n            interval: 1,\n          },\n          data: this.time,\n        },\n        yAxis: {\n          type: 'value',\n          scale: true,\n          show: true,\n          axisLabel: {\n            formatter: '{value} M',\n          },\n        },\n        series: [\n          {\n            name: MemoryData.CORE_MEMORY_STRING,\n            type: 'line',\n            // smooth: true,\n            lineStyle: {\n              width: 1,\n            },\n            symbol: 'none',\n            // areaStyle: {},\n            data: this.coreData,\n            color: '#67C23A',\n          },\n        ],\n      };\n      memoryChart.setOption(option);\n      memoryChart.getZr().on('click', () => {\n        const { seriesData } = clickParams;\n        if (clickParams.axisDimension === 'x') {\n          this.selectedTime = (seriesData[0] as any).name;\n          this.onValueClick(clickParams.value);\n        } else if (clickParams.axisDimension === 'y') {\n          this.onValueClick(seriesData[0].value);\n        }\n      });\n      // memoryChart.on('brushSelected', (params: echarts.Payload) => this.onBrushSelected(params));\n      window.onresize = function () {\n        memoryChart.resize();\n      };\n    },\n    onAxisPointerClick(params: MemoryData.IMemoryChartPointerClickParams) {\n      clickParams = params;\n      return params.value;\n    },\n    addMemoryData(id, time: string, yValue: number) {\n      this.time.push(time);\n      this.time.shift();\n      heapDataList.push({ id, time });\n      heapDataList.shift();\n\n      this.coreData.push(yValue);\n      this.coreData.shift();\n\n      this.updateEchartsData();\n    },\n    updateEchartsData() {\n      memoryChart.setOption({\n        xAxis: {\n          data: this.time,\n        },\n        series: [\n          {\n            name: MemoryData.CORE_MEMORY_STRING,\n            type: 'line',\n            smooth: true,\n            lineStyle: {\n              width: 1,\n            },\n            symbol: 'none',\n            data: this.coreData,\n          },\n        ],\n      });\n    },\n    onValueClick(time: string) {\n      memoryChart.setOption({\n        xAxis: {\n          axisPointer: {\n            value: time,\n          },\n        },\n      });\n      // 如果tab内已经有这个time的信息，就不再重新读取，而是切换到那个tab\n      this.loadTabData(time);\n    },\n    loadTabData(time: string) {\n      this.fetchHeapMeta(time);\n    },\n    async fetchHeapMeta(time) {\n      const item = heapDataList.find((v) => v && v.time === time);\n      if (item) {\n        const { id } = item;\n        channel\n          .send({\n            method: 'TDFMemory.fetchHeapCache',\n            params: { id },\n          } as any)\n          .then((res) => {\n            const commandRes = res as Adapter.CDP.CommandRes;\n            console.log(commandRes);\n            this.snapshotTable = this.groupHeapMates(time, commandRes.result.heapMetas) as any;\n          });\n      }\n    },\n    goToDetail() {\n      return;\n    },\n    startRecord() {\n      // this.openFile();\n      timer = setInterval(this.doSendCoreRequest, 1000);\n      this.isRecording = true;\n    },\n    stopCollectMemory() {\n      clearInterval(timer);\n      this.isRecording = false;\n    },\n    onReceivedMessage(id, rsp: MemoryData.IMemoryJsonData) {\n      const sumByte = rsp.heapMetas.reduce(\n        (accumulator: number, currentValue: MemoryData.IMemoryHeapMeta) =>\n          accumulator + Number((currentValue as any).s || 0),\n        0\n      );\n      const memoryMSize = Number((sumByte / 1024 / 1024).toFixed(2));\n      console.log(`onReceivedMessage core memorySize: ${memoryMSize}`);\n      i = i + 1;\n      const date = new Date();\n      const time = [date.getHours(), date.getMinutes(), date.getSeconds()].join(timeShowSpit);\n      this.addMemoryData(id, time, memoryMSize);\n    },\n    doSendCoreRequest() {\n      channel\n        .send({\n          method: TdfCommand.TDFMemoryGetHeapMeta,\n          params: {},\n        } as any)\n        .then((res) => {\n          const commandRes = res as Adapter.CDP.CommandRes;\n          this.onReceivedMessage(commandRes.id, commandRes.result as MemoryData.IMemoryJsonData);\n        });\n    },\n    groupHeapMates(rowKey: string, heapMetas: Array<MemoryData.IMemoryHeapMeta>): Array<MemoryData.MemoryTableMeta> {\n      const groups = heapMetas\n        .map((val) => (val as any).t)\n        .reduce((acc: { [key: string]: Array<MemoryData.IMemoryHeapMeta> }, val, i) => {\n          acc[val] = (acc[val] || []).concat(heapMetas[i]);\n          return acc;\n        }, {});\n\n      const result = new Array<MemoryData.MemoryTableMeta>();\n      let key: string;\n      for (key in groups) {\n        const value: Array<MemoryData.IMemoryHeapMeta> = groups[key];\n        const size = value.reduce(\n          (accumulator: number, currentValue: MemoryData.IMemoryHeapMeta) =>\n            accumulator + Number((currentValue as any).s || 0),\n          0\n        );\n        const object: MemoryData.MemoryTableMeta = {\n          size,\n          count: value.length,\n          type: key,\n          detail: value,\n          key: rowKey,\n        };\n        result.push(object);\n      }\n      return result;\n    },\n    clearDatas() {\n      this.time = Array(100).fill('');\n      this.coreData = Array(100);\n      this.selectedTime = '';\n      this.updateEchartsData();\n      clearInterval(timer);\n    },\n    onMemoryExpandChanged(active: string) {\n      console.log('onMemoryExpandChanged', active);\n    },\n    onDeviceChange() {\n      console.log(`[memory] onDeviceChange`);\n      this.stopCollectMemory();\n    },\n    onAppStatusChange() {\n      console.log(`[memory] onAppStatusChange`);\n      this.stopCollectMemory();\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.Memory {\n  // background-color: #f3f4f7;\n  border-radius: 6px;\n  height: 100%;\n}\n\n.memoryElHeader {\n  font-family: PingFangSC-Medium;\n  font-size: 14px;\n  color: #999;\n  text-align: center;\n  line-height: 35px;\n  flex: 0 0 35px;\n  margin-top: 7px;\n}\n\n.memoryMain {\n  // background-color: #fff;\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 100%;\n  flex: 1;\n}\n\n.memoryPanel {\n  display: flex;\n  flex-direction: column;\n  // background-color: #fff;\n  border-radius: 6px;\n}\n\n.memoryTableAside.el-aside {\n  width: 100px;\n  // background-color: #ffffff;\n  border-right: 2px solid #fff;\n  // border: 2px solid #ffffff;\n  // border-top-left-radius: 6px;\n  // border-bottom-left-radius: 6px;\n}\n\n.memorySnapshopTable {\n  background-color: transparent;\n}\n\n.memoryTable {\n  background-color: #f3f4f7;\n  // border-radius: 6px;\n  // margin-top: 15px;\n}\n\n.memorySnapshopTable.el-table th,\n.memorySnapshopTable.el-table tr {\n  background-color: transparent;\n}\n\n.memoryTable.el-table thead {\n  background-color: transparent;\n}\n\n.memoryChartContainer {\n  margin-top: 10px;\n  margin-left: 0px;\n  height: 300px;\n  width: 90vw;\n}\n\n.el-tabs__item:hover {\n  color: #f56c6c;\n}\n\n.el-tabs__item.is-active {\n  color: #f56c6c;\n}\n</style>\n","\nimport { defineComponent, ref } from 'vue';\nimport { ElTable } from 'element-plus';\nimport * as MemoryData from './memory-data';\n\nlet memoryTable: typeof ElTable;\nlet lastExpandedRow: MemoryData.MemoryTableMeta | null;\n\nexport default defineComponent({\n  name: 'MemorySnapshotTable',\n  props: ['source'],\n  data() {\n    return {\n      // memory table detail数据\n      memoryDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n    };\n  },\n  setup() {\n    const memorySnapshopTable = ref(ElTable);\n    return {\n      memorySnapshopTable,\n    };\n  },\n  mounted() {\n    memoryTable = this.memorySnapshopTable as typeof ElTable;\n  },\n  methods: {\n    onTableRowClick(row: MemoryData.MemoryTableMeta) {\n      (memoryTable as typeof ElTable).toggleRowExpansion(row);\n      this.memoryDetailTableData = row.detail;\n    },\n    onTableExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n      if (lastExpandedRow !== null) {\n        (memoryTable as typeof ElTable).toggleRowExpansion(lastExpandedRow, false);\n      }\n      if (expandedRows.length === 0) {\n        this.memoryDetailTableData = [];\n        lastExpandedRow = null;\n      } else {\n        this.memoryDetailTableData = row.detail;\n        lastExpandedRow = row;\n      }\n    },\n    getRowKey(row: MemoryData.MemoryTableMeta) {\n      return `${row.key}-${row.type}`;\n    },\n  },\n});\n","<template>\n  <el-table\n    :data=\"source\"\n    :default-sort=\"{ prop: 'size', order: 'descending' }\"\n    @expand-change=\"onTableExpandChange\"\n    @row-click=\"onTableRowClick\"\n    border\n    max-height=\"250\"\n    ref=\"memorySnapshopTable\"\n    size=\"mini\"\n  >\n    <el-table-column type=\"expand\">\n      <template #default>\n        <el-table\n          :data=\"memoryDetailTableData\"\n          :row-key=\"getRowKey\"\n          highlight-current-row\n          id=\"memoryDetailTable\"\n          max-height=\"250\"\n          show-header=\"false\"\n          size=\"mini\"\n        >\n          <el-table-column\n            label=\"address\"\n            prop=\"a\"\n            width=\"100\"\n          ></el-table-column>\n          <el-table-column\n            label=\"file\"\n            prop=\"f\"\n          ></el-table-column>\n        </el-table>\n      </template>\n    </el-table-column>\n    <el-table-column\n      label=\"type\"\n      prop=\"type\"\n    ></el-table-column>\n    <el-table-column\n      label=\"size(byte)\"\n      prop=\"size\"\n      sortable\n      width=\"100\"\n    ></el-table-column>\n    <el-table-column\n      label=\"count\"\n      prop=\"count\"\n      width=\"100\"\n    ></el-table-column>\n  </el-table>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport { ElTable } from 'element-plus';\nimport * as MemoryData from './memory-data';\n\nlet memoryTable: typeof ElTable;\nlet lastExpandedRow: MemoryData.MemoryTableMeta | null;\n\nexport default defineComponent({\n  name: 'MemorySnapshotTable',\n  props: ['source'],\n  data() {\n    return {\n      // memory table detail数据\n      memoryDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n    };\n  },\n  setup() {\n    const memorySnapshopTable = ref(ElTable);\n    return {\n      memorySnapshopTable,\n    };\n  },\n  mounted() {\n    memoryTable = this.memorySnapshopTable as typeof ElTable;\n  },\n  methods: {\n    onTableRowClick(row: MemoryData.MemoryTableMeta) {\n      (memoryTable as typeof ElTable).toggleRowExpansion(row);\n      this.memoryDetailTableData = row.detail;\n    },\n    onTableExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n      if (lastExpandedRow !== null) {\n        (memoryTable as typeof ElTable).toggleRowExpansion(lastExpandedRow, false);\n      }\n      if (expandedRows.length === 0) {\n        this.memoryDetailTableData = [];\n        lastExpandedRow = null;\n      } else {\n        this.memoryDetailTableData = row.detail;\n        lastExpandedRow = row;\n      }\n    },\n    getRowKey(row: MemoryData.MemoryTableMeta) {\n      return `${row.key}-${row.type}`;\n    },\n  },\n});\n</script>\n","import { render } from \"./memory-snapshot-table.vue?vue&type=template&id=59ac68af\"\nimport script from \"./memory-snapshot-table.vue?vue&type=script&lang=ts\"\nexport * from \"./memory-snapshot-table.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export interface IMemoryChartPointerClickParams {\n  value: string;\n  axisDimension: string;\n  seriesData: Array<{ value: string }>;\n}\n\nexport interface IMemoryHeapMeta {\n  address: string;\n  file: string;\n  line: number;\n  size: number;\n  type: string;\n}\n\nexport class MemoryTableMeta {\n  public size: number;\n  public count: number;\n  public type: string;\n  public detail: Array<IMemoryHeapMeta>;\n  public key: string;\n  public constructor(type: string, key: string) {\n    this.type = type;\n    this.key = key;\n    this.size = 0;\n    this.count = 0;\n    this.detail = new Array<IMemoryHeapMeta>();\n  }\n}\n\nexport interface IMemoryJsonData {\n  time: string;\n  heapMetas: Array<IMemoryHeapMeta>;\n}\n\nexport interface ILegendselectchangedParam {\n  type: 'legendselectchanged';\n  // 切换的图例名称\n  name: string;\n  // 所有图例的选中状态表\n  selected: {\n    [name: string]: boolean;\n  };\n}\n\nexport class MemoryTabs {\n  public name: string;\n  public data: Array<MemoryTableMeta> | MemoryCompareData;\n  public tabKey: string;\n  public type: string;\n  public constructor(name: string, data: Array<MemoryTableMeta> | MemoryCompareData, tabKey: string, type: string) {\n    this.name = name;\n    this.data = data;\n    this.tabKey = tabKey;\n    this.type = type;\n  }\n}\n\nexport class MemoryCompareData {\n  public startOnly: Array<MemoryTableMeta>;\n  // public both: Array<MemoryTableMeta>;\n  public endOnly: Array<MemoryTableMeta>;\n  public constructor(startOnly: Array<MemoryTableMeta>, endOnly: Array<MemoryTableMeta>) {\n    this.startOnly = startOnly;\n    // this.both = both;\n    this.endOnly = endOnly;\n  }\n}\n\nexport const TAB_TYPE_SNAPSHOT = 'snapshot';\nexport const TAB_TYPE_BRUSH = 'brush';\n\nexport const CORE_MEMORY_STRING = 'core memory';\n\nexport function memoryTableRowHash(params: MemoryTableMeta): string {\n  return `${params.type}-${params.count}`;\n}\n","<template>\n  <el-row :gutter=\"20\">\n    <el-col :span=\"12\"><div class=\"compareTableTitle\">开始点差异情况</div></el-col>\n    <!-- <el-col :span=\"8\"><div class=\"compareTableTitle\">开始结束不变的</div></el-col> -->\n    <el-col :span=\"12\"><div class=\"compareTableTitle\">结束点差异情况</div></el-col>\n  </el-row>\n  <el-row :gutter=\"20\">\n    <el-col :span=\"12\">\n      <el-table\n        :data=\"source.startOnly\"\n        border\n        max-height=\"250\"\n        size=\"mini\"\n        @expand-change=\"onStartOnlyExpandChange\"\n        @row-click=\"onStartOnlyRowClick\"\n        :default-sort=\"{ prop: 'size', order: 'descending' }\"\n      >\n        <el-table-column type=\"expand\">\n          <template #default=\"\">\n            <el-table\n              class=\"comparedDetailTable\"\n              :data=\"startOnlyDetailTableData\"\n              highlight-current-row\n              size=\"mini\"\n              :row-key=\"getRowKey\"\n              show-header=\"false\"\n              max-height=\"250\"\n            >\n              <el-table-column prop=\"address\" label=\"address\" width=\"120\"> </el-table-column>\n              <el-table-column prop=\"file\" label=\"file\"> </el-table-column>\n            </el-table>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"size\" label=\"size\" sortable width=\"100\"> </el-table-column>\n        <el-table-column prop=\"count\" label=\"count\" width=\"100\"> </el-table-column>\n        <el-table-column prop=\"type\" label=\"type\"> </el-table-column> </el-table\n    ></el-col>\n    <!-- <el-col :span=\"8\"\n      ><el-table\n        :data=\"source.both\"\n        border\n        max-height=\"250\"\n        size=\"mini\"\n        @expand-change=\"onBothExpandChange\"\n        @row-click=\"onBothRowClick\"\n        :default-sort=\"{ prop: 'size', order: 'descending' }\"\n      >\n        <el-table-column type=\"expand\">\n          <template #default=\"\">\n            <el-table\n              class=\"comparedDetailTable\"\n              :data=\"bothDetailTableData\"\n              highlight-current-row\n              size=\"mini\"\n              :row-key=\"getRowKey\"\n              show-header=\"false\"\n              max-height=\"250\"\n            >\n              <el-table-column prop=\"address\" label=\"address\" width=\"120\"> </el-table-column>\n              <el-table-column prop=\"file\" label=\"file\"> </el-table-column>\n            </el-table>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"size\" label=\"size\" sortable width=\"100\"> </el-table-column>\n        <el-table-column prop=\"count\" label=\"count\" width=\"100\"> </el-table-column>\n        <el-table-column prop=\"type\" label=\"type\"> </el-table-column> </el-table\n    ></el-col> -->\n    <el-col :span=\"12\"\n      ><el-table\n        :data=\"source.endOnly\"\n        border\n        max-height=\"250\"\n        size=\"mini\"\n        @expand-change=\"onEndOnlyExpandChange\"\n        @row-click=\"onEndOnlyRowClick\"\n        :default-sort=\"{ prop: 'size', order: 'descending' }\"\n      >\n        <el-table-column type=\"expand\">\n          <template #default=\"\">\n            <el-table\n              class=\"comparedDetailTable\"\n              :data=\"endOnlyDetailTableData\"\n              highlight-current-row\n              size=\"mini\"\n              :row-key=\"getRowKey\"\n              show-header=\"false\"\n              max-height=\"250\"\n            >\n              <el-table-column prop=\"address\" label=\"address\" width=\"120\"> </el-table-column>\n              <el-table-column prop=\"file\" label=\"file\"> </el-table-column>\n            </el-table>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"size\" label=\"size\" sortable width=\"100\"> </el-table-column>\n        <el-table-column prop=\"count\" label=\"count\" width=\"100\"> </el-table-column>\n        <el-table-column prop=\"type\" label=\"type\"> </el-table-column> </el-table\n    ></el-col>\n  </el-row>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport * as MemoryData from './memory-data';\n\nexport default defineComponent({\n  name: 'MemoryComparedTables',\n  props: ['source'],\n  data() {\n    return {\n      startOnlyDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n      // bothDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n      endOnlyDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n    };\n  },\n  methods: {\n    onStartOnlyExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n      if (expandedRows.length === 0) {\n        this.startOnlyDetailTableData = [];\n      } else {\n        this.startOnlyDetailTableData = row.detail;\n      }\n    },\n    // onBothExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n    //   if (expandedRows.length === 0) {\n    //     this.bothDetailTableData = [];\n    //   } else {\n    //     this.bothDetailTableData = row.detail;\n    //   }\n    // },\n    onEndOnlyExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n      if (expandedRows.length === 0) {\n        this.endOnlyDetailTableData = [];\n      } else {\n        this.endOnlyDetailTableData = row.detail;\n      }\n    },\n    onStartOnlyRowClick(row: MemoryData.MemoryTableMeta) {\n      this.startOnlyDetailTableData = row.detail;\n    },\n    // onBothRowClick(row: MemoryData.MemoryTableMeta) {\n    //   this.bothDetailTableData = row.detail;\n    // },\n    onEndOnlyRowClick(row: MemoryData.MemoryTableMeta) {\n      this.endOnlyDetailTableData = row.detail;\n    },\n    getRowKey(row: MemoryData.MemoryTableMeta) {\n      return `${row.key}-${row.type}`;\n    },\n  },\n});\n</script>\n\n<style>\n.compareTableTitle {\n  text-align: center;\n}\n</style>\n","\nimport { defineComponent } from 'vue';\nimport * as MemoryData from './memory-data';\n\nexport default defineComponent({\n  name: 'MemoryComparedTables',\n  props: ['source'],\n  data() {\n    return {\n      startOnlyDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n      // bothDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n      endOnlyDetailTableData: Array<MemoryData.IMemoryHeapMeta>(),\n    };\n  },\n  methods: {\n    onStartOnlyExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n      if (expandedRows.length === 0) {\n        this.startOnlyDetailTableData = [];\n      } else {\n        this.startOnlyDetailTableData = row.detail;\n      }\n    },\n    // onBothExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n    //   if (expandedRows.length === 0) {\n    //     this.bothDetailTableData = [];\n    //   } else {\n    //     this.bothDetailTableData = row.detail;\n    //   }\n    // },\n    onEndOnlyExpandChange(row: MemoryData.MemoryTableMeta, expandedRows: Array<MemoryData.MemoryTableMeta>) {\n      if (expandedRows.length === 0) {\n        this.endOnlyDetailTableData = [];\n      } else {\n        this.endOnlyDetailTableData = row.detail;\n      }\n    },\n    onStartOnlyRowClick(row: MemoryData.MemoryTableMeta) {\n      this.startOnlyDetailTableData = row.detail;\n    },\n    // onBothRowClick(row: MemoryData.MemoryTableMeta) {\n    //   this.bothDetailTableData = row.detail;\n    // },\n    onEndOnlyRowClick(row: MemoryData.MemoryTableMeta) {\n      this.endOnlyDetailTableData = row.detail;\n    },\n    getRowKey(row: MemoryData.MemoryTableMeta) {\n      return `${row.key}-${row.type}`;\n    },\n  },\n});\n","import { render } from \"./memory-compare-tables.vue?vue&type=template&id=a8a57542\"\nimport script from \"./memory-compare-tables.vue?vue&type=script&lang=ts\"\nexport * from \"./memory-compare-tables.vue?vue&type=script&lang=ts\"\n\nimport \"./memory-compare-tables.vue?vue&type=style&index=0&id=a8a57542&lang=css\"\nscript.render = render\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport * as echarts from 'echarts';\nimport MemorySnapshotTable from './memory-snapshot-table.vue';\nimport * as MemoryData from './memory-data';\nimport MemoryCompareTables from './memory-compare-tables.vue';\n// import { showToast, TipsType } from '@/utils/toast';\nimport { memoryChannel as channel } from '../memory-channel';\nimport { TdfCommand } from '@tencent/tdf-devtools-protocol/types/enum-tdf-mapping';\n\n// const coreSnapshotPrefix = 'memory_core_snapshot';\n// const jsSnapshotPrefix = 'memory_js_snapshot';\nconst timeShowSpit = ':';\n// const timeFileNameSplit = '_';\nlet memoryChart: echarts.ECharts;\nlet option: echarts.EChartsOption;\nlet timer: NodeJS.Timeout;\nlet i = 0;\nlet clickParams: MemoryData.IMemoryChartPointerClickParams;\nconst heapDataList = Array(100);\n\nexport default defineComponent({\n  components: { MemorySnapshotTable, MemoryCompareTables },\n  data() {\n    return {\n      snapshotTable: [],\n      // echarts横坐标数组数据\n      time: Array(100).fill(''),\n      // echarts纵坐标数组数据\n      coreData: Array(100),\n      selectedTime: '',\n      isRecording: false,\n      isLoadingSnapshot: false,\n      memoryExpandedArray: [MemoryData.CORE_MEMORY_STRING],\n    };\n  },\n  watch: {\n    '$store.state.device.list'(appConnect) {\n      console.log('list', appConnect);\n      this.onDeviceChange();\n    },\n    '$store.state.device.appConnect'(appConnect) {\n      console.log('appConnect', appConnect);\n      this.onAppStatusChange();\n    },\n  },\n  // 挂载\n  mounted() {\n    this.drawEChart();\n  },\n  destroyed() {\n    console.log('memory page destroyed');\n    // this.closeWebSockerConnect();\n    // this.deleteCacheFile();\n  },\n  methods: {\n    drawEChart() {\n      const charts = this.$refs.memoryChartContainer as HTMLElement;\n      if (charts !== null) {\n        if (memoryChart) memoryChart.dispose();\n        const preferDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        memoryChart = echarts.init(charts, preferDarkMode ? 'dark' : 'light');\n      }\n      option = {\n        dataZoom: [\n          {\n            filterMode: 'none',\n            realtime: false, // 拖动滚动条时是否动态的更新图表数据\n            height: 25, // 滚动条高度\n            start: 75, // 滚动条开始位置（共100等份）\n            end: 100, // 结束位置（共100等份）\n          },\n        ],\n        title: {},\n        tooltip: {\n          triggerOn: 'click',\n          trigger: 'axis',\n          enterable: true,\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#909399', // 竖标横坐标背景色\n            },\n          },\n        }, // 提示框组件\n        legend: {\n          show: true,\n          data: [MemoryData.CORE_MEMORY_STRING],\n          icon: 'circle',\n          // orient: 'vertical',\n          // right: 10,\n          textStyle: {\n            fontSize: 14,\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          axisPointer: {\n            value: '',\n            snap: true,\n            lineStyle: {\n              color: '#409EFF',\n              width: 1,\n            },\n            label: {\n              formatter: (params: MemoryData.IMemoryChartPointerClickParams) => this.onAxisPointerClick(params),\n            },\n            handle: {\n              show: true,\n              color: '#409EFF',\n              icon: 'none',\n            },\n          },\n          axisLabel: {\n            interval: 1,\n          },\n          data: this.time,\n        },\n        yAxis: {\n          type: 'value',\n          scale: true,\n          show: true,\n          axisLabel: {\n            formatter: '{value} M',\n          },\n        },\n        series: [\n          {\n            name: MemoryData.CORE_MEMORY_STRING,\n            type: 'line',\n            // smooth: true,\n            lineStyle: {\n              width: 1,\n            },\n            symbol: 'none',\n            // areaStyle: {},\n            data: this.coreData,\n            color: '#67C23A',\n          },\n        ],\n      };\n      memoryChart.setOption(option);\n      memoryChart.getZr().on('click', () => {\n        const { seriesData } = clickParams;\n        if (clickParams.axisDimension === 'x') {\n          this.selectedTime = (seriesData[0] as any).name;\n          this.onValueClick(clickParams.value);\n        } else if (clickParams.axisDimension === 'y') {\n          this.onValueClick(seriesData[0].value);\n        }\n      });\n      // memoryChart.on('brushSelected', (params: echarts.Payload) => this.onBrushSelected(params));\n      window.onresize = function () {\n        memoryChart.resize();\n      };\n    },\n    onAxisPointerClick(params: MemoryData.IMemoryChartPointerClickParams) {\n      clickParams = params;\n      return params.value;\n    },\n    addMemoryData(id, time: string, yValue: number) {\n      this.time.push(time);\n      this.time.shift();\n      heapDataList.push({ id, time });\n      heapDataList.shift();\n\n      this.coreData.push(yValue);\n      this.coreData.shift();\n\n      this.updateEchartsData();\n    },\n    updateEchartsData() {\n      memoryChart.setOption({\n        xAxis: {\n          data: this.time,\n        },\n        series: [\n          {\n            name: MemoryData.CORE_MEMORY_STRING,\n            type: 'line',\n            smooth: true,\n            lineStyle: {\n              width: 1,\n            },\n            symbol: 'none',\n            data: this.coreData,\n          },\n        ],\n      });\n    },\n    onValueClick(time: string) {\n      memoryChart.setOption({\n        xAxis: {\n          axisPointer: {\n            value: time,\n          },\n        },\n      });\n      // 如果tab内已经有这个time的信息，就不再重新读取，而是切换到那个tab\n      this.loadTabData(time);\n    },\n    loadTabData(time: string) {\n      this.fetchHeapMeta(time);\n    },\n    async fetchHeapMeta(time) {\n      const item = heapDataList.find((v) => v && v.time === time);\n      if (item) {\n        const { id } = item;\n        channel\n          .send({\n            method: 'TDFMemory.fetchHeapCache',\n            params: { id },\n          } as any)\n          .then((res) => {\n            const commandRes = res as Adapter.CDP.CommandRes;\n            console.log(commandRes);\n            this.snapshotTable = this.groupHeapMates(time, commandRes.result.heapMetas) as any;\n          });\n      }\n    },\n    goToDetail() {\n      return;\n    },\n    startRecord() {\n      // this.openFile();\n      timer = setInterval(this.doSendCoreRequest, 1000);\n      this.isRecording = true;\n    },\n    stopCollectMemory() {\n      clearInterval(timer);\n      this.isRecording = false;\n    },\n    onReceivedMessage(id, rsp: MemoryData.IMemoryJsonData) {\n      const sumByte = rsp.heapMetas.reduce(\n        (accumulator: number, currentValue: MemoryData.IMemoryHeapMeta) =>\n          accumulator + Number((currentValue as any).s || 0),\n        0\n      );\n      const memoryMSize = Number((sumByte / 1024 / 1024).toFixed(2));\n      console.log(`onReceivedMessage core memorySize: ${memoryMSize}`);\n      i = i + 1;\n      const date = new Date();\n      const time = [date.getHours(), date.getMinutes(), date.getSeconds()].join(timeShowSpit);\n      this.addMemoryData(id, time, memoryMSize);\n    },\n    doSendCoreRequest() {\n      channel\n        .send({\n          method: TdfCommand.TDFMemoryGetHeapMeta,\n          params: {},\n        } as any)\n        .then((res) => {\n          const commandRes = res as Adapter.CDP.CommandRes;\n          this.onReceivedMessage(commandRes.id, commandRes.result as MemoryData.IMemoryJsonData);\n        });\n    },\n    groupHeapMates(rowKey: string, heapMetas: Array<MemoryData.IMemoryHeapMeta>): Array<MemoryData.MemoryTableMeta> {\n      const groups = heapMetas\n        .map((val) => (val as any).t)\n        .reduce((acc: { [key: string]: Array<MemoryData.IMemoryHeapMeta> }, val, i) => {\n          acc[val] = (acc[val] || []).concat(heapMetas[i]);\n          return acc;\n        }, {});\n\n      const result = new Array<MemoryData.MemoryTableMeta>();\n      let key: string;\n      for (key in groups) {\n        const value: Array<MemoryData.IMemoryHeapMeta> = groups[key];\n        const size = value.reduce(\n          (accumulator: number, currentValue: MemoryData.IMemoryHeapMeta) =>\n            accumulator + Number((currentValue as any).s || 0),\n          0\n        );\n        const object: MemoryData.MemoryTableMeta = {\n          size,\n          count: value.length,\n          type: key,\n          detail: value,\n          key: rowKey,\n        };\n        result.push(object);\n      }\n      return result;\n    },\n    clearDatas() {\n      this.time = Array(100).fill('');\n      this.coreData = Array(100);\n      this.selectedTime = '';\n      this.updateEchartsData();\n      clearInterval(timer);\n    },\n    onMemoryExpandChanged(active: string) {\n      console.log('onMemoryExpandChanged', active);\n    },\n    onDeviceChange() {\n      console.log(`[memory] onDeviceChange`);\n      this.stopCollectMemory();\n    },\n    onAppStatusChange() {\n      console.log(`[memory] onAppStatusChange`);\n      this.stopCollectMemory();\n    },\n  },\n});\n","export class Channel {\n  private ws?: WebSocket = undefined;\n  private msgBuffer: Channel.RequestData[] = [];\n  private requestPromiseMap: Map<string | number, any> = new Map();\n  private eventListenerMap: Map<string, Channel.EventListener[]> = new Map();\n\n  get isReady() {\n    return this.ws?.readyState === WebSocket.OPEN;\n  }\n\n  constructor(extensionName: string) {\n    const url = new URL(window.parent.location.href);\n    const ws = url.searchParams.get('ws') as string;\n    if (!ws) return;\n\n    const newUrl = new URL(ws);\n    const clientId = newUrl.searchParams.get('clientId');\n    newUrl.searchParams.set('clientId', `${clientId}-${extensionName}`);\n    const wsUrl = `ws://${newUrl.toString()}`;\n    console.log(wsUrl);\n\n    this.ws = new WebSocket(wsUrl);\n\n    this.ws.onopen = () => {\n      console.log('ws connected!');\n      this.msgBuffer.forEach((msg) => {\n        this.send(msg);\n      });\n      this.msgBuffer = [];\n    };\n\n    this.ws.onmessage = (event) => {\n      const res = JSON.parse(event.data) as Adapter.CDP.Res;\n      if (!('id' in res)) {\n        return;\n      }\n      const { id } = res;\n      const requestPromise = this.requestPromiseMap.get(id);\n      if (requestPromise) {\n        requestPromise.resolve(res);\n        this.requestPromiseMap.delete(id);\n      }\n    };\n\n    this.ws.onclose = () => {\n      const e = new Error('ws closed');\n      for (const requestPromise of this.requestPromiseMap.values()) {\n        requestPromise.reject(e);\n      }\n    };\n  }\n\n  public send(msg: Channel.RequestData): Promise<Adapter.CDP.Res> {\n    if (!this.ws) return Promise.reject(new Error('ws is invalid'));\n    return new Promise((resolve, reject) => {\n      if (this.isReady) {\n        sendToParent('getRequestId').then((id) => {\n          msg.id = id as number;\n          this.requestPromiseMap.set(msg.id, { resolve, reject });\n          return this.ws!.send(JSON.stringify(msg));\n        });\n      }\n      this.msgBuffer.push(msg);\n    });\n  }\n\n  public addEventListener(method: string, listener: Channel.EventListener) {\n    if (!this.eventListenerMap.has(method)) this.eventListenerMap.set(method, []);\n    this.eventListenerMap.get(method)?.push(listener);\n  }\n}\n\nexport const sendToParent = (cmd: string) =>\n  new Promise((resolve, reject) => {\n    window.parent.postMessage(cmd, window.location.origin);\n    const listener = (event: any) => {\n      window.removeEventListener('message', listener);\n      resolve(event.data);\n    };\n    window.addEventListener('message', listener, false);\n\n    setTimeout(() => {\n      reject(new Error('no response, timeout!'));\n    }, 2000);\n  });\n","import { Channel } from '../../utils/channel';\n\nexport const memoryChannel = new Channel('memory');\n","import { render } from \"./memory.vue?vue&type=template&id=4c30ffe0&scoped=true\"\nimport script from \"./memory.vue?vue&type=script&lang=ts\"\nexport * from \"./memory.vue?vue&type=script&lang=ts\"\n\nimport \"./memory.vue?vue&type=style&index=0&id=4c30ffe0&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-4c30ffe0\"\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport Memory from '@@/memory/components/memory.vue';\nimport '../index.scss';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Memory,\n  },\n});\n","import { render } from \"./app.vue?vue&type=template&id=4fa4f3f3\"\nimport script from \"./app.vue?vue&type=script&lang=ts\"\nexport * from \"./app.vue?vue&type=script&lang=ts\"\n\nimport \"./app.vue?vue&type=style&index=0&id=4fa4f3f3&lang=css\"\nscript.render = render\n\nexport default script","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","import 'dayjs/locale/zh-cn';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/lib/theme-chalk/index.css';\nimport { createApp } from 'vue';\nimport App from './app.vue';\nimport store from './store';\n\nconst app = createApp(App);\napp.use(ElementPlus);\napp.use(store).mount('#app');\n"],"sourceRoot":""}